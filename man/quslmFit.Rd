% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/quslmFit.R
\name{quslmFit}
\alias{quslmFit}
\title{LINEAR MODELS used for qusage calls the stats lm.fit call and runs a C++ code for the subsequent calculations, performance to gain with no probe weights increased. this modifies Fit genewise linear models by Gordon Smyth authored on 30 June 2003 and Last modified 6 Oct 2015. this assumes no probe weights, and least squares regression enforcing these assumptions to streamline into lm.fit and passing into C++ for moderated statistics.}
\usage{
quslmFit(object, design = NULL, ndups = 1, spacing = 1, block = NULL,
  correlation, weights = NULL, method = "ls", ...)
}
\arguments{
\item{object}{expression set type}

\item{design}{model.matrix built from formula}

\item{ndups}{number of times each distinct probe is on array}

\item{spacing}{the spacing between the next dupe, 1 for consecutive}

\item{block}{vector or factor specifying a blocking variable on the arrays. Has length equal to the number of arrays. Must be ‘NULL’ if ‘ndups>2’.}

\item{correlation}{inter-duplicate of inter-technical replicate correlation}

\item{weights}{non-negative observation weights.  Can be a numeric matrix of individual weights, of same size as the object expression  matrix, or a numeric vector of array weights with length equal to ‘ncol’ of the expression matrix, or a numeric vector of gene weights with length equal to ‘nrow’ of the expression  matrix.}

\item{method}{fitting method; ‘"ls"’ for least squares or ‘"robust"’ for robust regression}

\item{...}{other optional arguments for overloading lm.series, gls.series, or mrlm}
}
\description{
LINEAR MODELS used for qusage calls the stats lm.fit call and runs a C++ code for the subsequent calculations, performance to gain with no probe weights increased. this modifies Fit genewise linear models by Gordon Smyth authored on 30 June 2003 and Last modified 6 Oct 2015. this assumes no probe weights, and least squares regression enforcing these assumptions to streamline into lm.fit and passing into C++ for moderated statistics.
}

